class Solution {
public:
    bool canWePlace(vector<int> &nums, int dist, int k) {
    int n = nums.size(); //size of array
    int cntCows = 1; //no. of cows placed
    int last = nums[0]; //position of last placed cow.
    for (int i = 1; i < n; i++) {
        if (nums[i] - last >= dist) {
            cntCows++; //place next cow.
            last = nums[i]; //update the last location.
        }
        if (cntCows >= k) return true;
    }
    return false;
}
    int aggressiveCows(vector<int> &nums, int k) {
        int n = nums.size(); //size of array
    //sort the stalls[]:
    sort(nums.begin(), nums.end());

    int low = 1, high = nums[n - 1] - nums[0];
    //apply binary search:
    while (low <= high) {
        int mid = (low + high) / 2;
        if (canWePlace(nums, mid, k) == true) {
            low = mid + 1;
        }
        else high = mid - 1;
    }
    return high;
    }
};
